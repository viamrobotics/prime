import"./index.5c7752e3.js";import{c as e,A as i}from"./Props.18bc2ebe.js";import"./iframe.156ce600.js";function s(){return s=Object.assign?Object.assign.bind():function(t){for(var n=1;n<arguments.length;n++){var o=arguments[n];for(var r in o)Object.prototype.hasOwnProperty.call(o,r)&&(t[r]=o[r])}return t},s.apply(this,arguments)}const m=t=>function(o){return console.warn("Component "+t+" was not imported, exported, or provided by MDXProvider as global scope"),e("div",o)},p=m("Meta"),d={},c="wrapper";function l({components:t,...n}){return e(c,s({},d,n,{components:t,mdxType:"MDXLayout"}),e(p,{title:"Docs/Introduction",mdxType:"Meta"}),e("h1",null,"P.R.I.M.E."),e("p",null,"Pretty rad interactive modular elements"),e("p",null,"Made with love at viam"),e("h3",null,"Getting started"),e("p",null,'PRIME is a collection of atomic UI elements, designed to "just work" in any HTML-based environment, regardless of framework or lack thereof. It is a web component library.'),e("p",null,"The PRIME NPM package contains the following necessary exports for usage:"),e("ul",null,e("li",{parentName:"ul"},e("inlineCode",{parentName:"li"},"prime.es.js")," or ",e("inlineCode",{parentName:"li"},"prime.umd.js")," - JS that defines custom elements. ES modules are recommended over UMD."),e("li",{parentName:"ul"},e("inlineCode",{parentName:"li"},"prime.css")," - stylesheet shared by all elements.")),e("p",null,"If the necessary ",e("inlineCode",{parentName:"p"},".css")," and ",e("inlineCode",{parentName:"p"},".js"),` files have been added to your HTML document, then no additional imports are needed!
You can immediately start adding PRIME elements to your app:`),e("pre",null,e("code",{parentName:"pre",className:"language-html"},`<b-button label='Hello world!' />
`)),e("h3",null,"Further Reading"),e("ul",null,e("li",{parentName:"ul"},e("a",{parentName:"li",href:"https://web.dev/custom-elements-best-practices/"},"Custom Elements Best Practices"))))}l.isMDXComponent=!0;const u=()=>{throw new Error("Docs-only story")};u.parameters={docsOnly:!0};const a={title:"Docs/Introduction",includeStories:["__page"]},y={};a.parameters=a.parameters||{};a.parameters.docs={...a.parameters.docs||{},page:()=>e(i,{mdxStoryNameToKey:y,mdxComponentAnnotations:a},e(l,null))};const M=["__page"];export{M as __namedExportsOrder,u as __page,a as default};
//# sourceMappingURL=introduction.stories.513a79d6.js.map
